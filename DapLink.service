<?php

// creo ordini di vendita su ims con diversi prodotti
// fare uno scheduler che legge per ogni prodotto di tutti gli ordini di vendita crea un array da inviare col curl
require_once('include/utils/utils.php');
require_once("modules/Emails/class.phpmailer.php");
require_once("modules/Emails/mail.php");
require_once('include/logging.php');
require_once("config.php");
require_once ("cron/modules/SalesOrder/DapLinkClass.php");
include_once 'include/Webservices/Query.php';
include_once 'include/Webservices/Update.php';
include_once 'include/Webservices/Retrieve.php';
include_once 'include/Webservices/Utils.php';

// global $adb;

error_reporting(E_ALL);
ini_set('display_errors', 1);

$current_user = Users::getActiveAdminUser();



/*
* MAIN 
*//*
 $id = 60;
 try {
        $wsid = vtws_getWebserviceEntityId('SalesOrder', $id); // Module_Webservice_ID x CRM_ID
        $data = array('sostatus' => 'DaplinkAccepted', 'id' => $wsid, 'hdnTaxType' => 'group');

        $so = vtws_retrieve($wsid, $current_user);
        $so['invoicestatus'] = 'AutoCreated';
        $so['sostatus'] = 'DaplinkAccepted';
        $so['id'] = $wsid;

        $data = vtws_update($so, $current_user);
        print_r($data);

} catch (WebServiceException $ex) {
        echo $ex->getMessage();
}
 // setSalesOrderConfirmed($tmpID, $current_user);
die();*/




$a = new DapLinkClass();

// Pulisco i log se $ clearLog è a true
$clearLog = true;
if ($clearLog == true){
    $a->clearLog();
}

$salesOrderQuery="SELECT  contact.*, product.*, vtiger_inventoryproductrel.quantity AS productQty,
	vtiger_soshipads.ship_city AS destCity, vtiger_soshipads.ship_code AS destPostalCode, vtiger_soshipads.ship_country AS destCountryCode, vtiger_soshipads.ship_state AS destAreaCode, vtiger_soshipads.ship_street AS destAddress,
	vtiger_salesorder.duedate AS orderDate , vtiger_crmentity.description AS deliveryInfo, vtiger_salesorder.pre_tax_total AS totalAmount,
--	vtiger_salesordercf.cf_857 AS orderDate, vtiger_salesordercf.cf_859 AS dateOfDelivery, vtiger_salesordercf.cf_855 AS cod,
	vtiger_salesorder.salesorderid AS orderID 
        from vtiger_salesorder 
        inner join vtiger_salesordercf on vtiger_salesorder.salesorderid=vtiger_salesordercf.salesorderid 
        inner join vtiger_crmentity on vtiger_salesorder.salesorderid=crmid and deleted=0 and setype='SalesOrder'
        INNER JOIN vtiger_soshipads ON vtiger_soshipads.soshipaddressid = vtiger_salesorder.salesorderid
        INNER JOIN(
                SELECT vtiger_contactdetails.contactid , firstname AS customerFirstName, lastname AS customerLastName, mobile AS destPhone, email AS destEmail, department AS customerID
                from vtiger_contactdetails 
                inner join vtiger_contactscf on vtiger_contactdetails.contactid=vtiger_contactscf.contactid 
                inner join vtiger_crmentity on vtiger_contactdetails.contactid=crmid and deleted=0 and setype='Contacts'
        )AS contact ON contact.contactid = vtiger_salesorder.contactid
        INNER JOIN vtiger_inventoryproductrel ON vtiger_inventoryproductrel.id = vtiger_salesorder.salesorderid
        INNER JOIN(
                SELECT vtiger_products.productcode as productID, vtiger_products.productname as productName, vtiger_products.productid AS idProdotto
                from vtiger_products 
                inner join vtiger_productcf on vtiger_products.productid=vtiger_productcf.productid 
                inner join vtiger_crmentity on vtiger_products.productid=crmid and deleted=0 and setype='Products'
        )AS product ON product.idProdotto = vtiger_inventoryproductrel.productid
        WHERE vtiger_salesorder.sostatus='Confirmed'
        ORDER BY orderID ASC";


$salesOrders = $a->runQuery($salesOrderQuery);

// Se non abbiamo dati da mandari usciamo senza entrare
if(count($salesOrders ) == 0)
    return;

// Apro curl e faccio la Login
try{
$a->login();
}catch (Exception $e){
        
    return;
}

$newOrder   =  true;
$orderCode  =  '';
$firstTime  =  true;
$i = 0;

foreach ($salesOrders as $salesOrder){
    
    $i++;
    if($firstTime == true){
        $orderCode = $salesOrder['orderid'];
        $firstTime = false;
    }
    
    if($orderCode != $salesOrder['orderid']){
        // invio contatto 
        $c = $a->fillContact($salesOrders[$i-1]);
        $a->updateContact($c);
        // Invio ordine 
        $a->insertOrder($orderArray, $orderCode, $current_user);
        // Resetto l'array
        unset($orderArray);
        
        // Imposto variabile $firstTime così da poter salvare un nuovo ID
        $orderCode = $salesOrder['orderid'];
        // $firstTime = true;
    }
    
    // Creo un array per l'ordine
    $orderArray[] = $a->fillOrder($salesOrder, $i);    
    
}

// invio ultimo contatto
$c = $a->fillContact($salesOrders[$i-1]);
$a->updateContact($c);
// iNVIO ORDINE ULTIMO
$a->insertOrder($orderArray, $orderCode, $current_user);